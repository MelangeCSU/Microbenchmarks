//
// Generated by NVIDIA NVVM Compiler
//
// Compiler Build ID: CL-19856038
// Cuda compilation tools, release 7.5, V7.5.17
// Based on LLVM 3.4svn
//

.version 4.3
.target sm_52
.address_size 64

	// .weak	cudaMalloc
// _Z8BWkernelPii$__cuda_local_var_42886_30_non_const_s_A has been demoted
// _Z8BWkernelPii$__cuda_local_var_42886_41_non_const_s_B has been demoted

.weak .func  (.param .b32 func_retval0) cudaMalloc(
	.param .b64 cudaMalloc_param_0,
	.param .b64 cudaMalloc_param_1
)
{
	.reg .b32 	%r<2>;


	mov.u32 	%r1, 30;
	st.param.b32	[func_retval0+0], %r1;
	ret;
}

	// .weak	cudaFuncGetAttributes
.weak .func  (.param .b32 func_retval0) cudaFuncGetAttributes(
	.param .b64 cudaFuncGetAttributes_param_0,
	.param .b64 cudaFuncGetAttributes_param_1
)
{
	.reg .b32 	%r<2>;


	mov.u32 	%r1, 30;
	st.param.b32	[func_retval0+0], %r1;
	ret;
}

	// .weak	cudaDeviceGetAttribute
.weak .func  (.param .b32 func_retval0) cudaDeviceGetAttribute(
	.param .b64 cudaDeviceGetAttribute_param_0,
	.param .b32 cudaDeviceGetAttribute_param_1,
	.param .b32 cudaDeviceGetAttribute_param_2
)
{
	.reg .b32 	%r<2>;


	mov.u32 	%r1, 30;
	st.param.b32	[func_retval0+0], %r1;
	ret;
}

	// .weak	cudaGetDevice
.weak .func  (.param .b32 func_retval0) cudaGetDevice(
	.param .b64 cudaGetDevice_param_0
)
{
	.reg .b32 	%r<2>;


	mov.u32 	%r1, 30;
	st.param.b32	[func_retval0+0], %r1;
	ret;
}

	// .weak	cudaOccupancyMaxActiveBlocksPerMultiprocessor
.weak .func  (.param .b32 func_retval0) cudaOccupancyMaxActiveBlocksPerMultiprocessor(
	.param .b64 cudaOccupancyMaxActiveBlocksPerMultiprocessor_param_0,
	.param .b64 cudaOccupancyMaxActiveBlocksPerMultiprocessor_param_1,
	.param .b32 cudaOccupancyMaxActiveBlocksPerMultiprocessor_param_2,
	.param .b64 cudaOccupancyMaxActiveBlocksPerMultiprocessor_param_3
)
{
	.reg .b32 	%r<2>;


	mov.u32 	%r1, 30;
	st.param.b32	[func_retval0+0], %r1;
	ret;
}

	// .weak	cudaOccupancyMaxActiveBlocksPerMultiprocessorWithFlags
.weak .func  (.param .b32 func_retval0) cudaOccupancyMaxActiveBlocksPerMultiprocessorWithFlags(
	.param .b64 cudaOccupancyMaxActiveBlocksPerMultiprocessorWithFlags_param_0,
	.param .b64 cudaOccupancyMaxActiveBlocksPerMultiprocessorWithFlags_param_1,
	.param .b32 cudaOccupancyMaxActiveBlocksPerMultiprocessorWithFlags_param_2,
	.param .b64 cudaOccupancyMaxActiveBlocksPerMultiprocessorWithFlags_param_3,
	.param .b32 cudaOccupancyMaxActiveBlocksPerMultiprocessorWithFlags_param_4
)
{
	.reg .b32 	%r<2>;


	mov.u32 	%r1, 30;
	st.param.b32	[func_retval0+0], %r1;
	ret;
}

	// .globl	_Z8BWkernelPii
.visible .entry _Z8BWkernelPii(
	.param .u64 _Z8BWkernelPii_param_0,
	.param .u32 _Z8BWkernelPii_param_1
)
{
	.local .align 4 .b8 	__local_depot6[16];
	.reg .b64 	%SP;
	.reg .b64 	%SPL;
	.reg .pred 	%p<4>;
	.reg .b32 	%r<40>;
	.reg .b64 	%rd<14>;
	// demoted variable
	.shared .align 4 .b8 _Z8BWkernelPii$__cuda_local_var_42886_30_non_const_s_A[24576];
	// demoted variable
	.shared .align 4 .b8 _Z8BWkernelPii$__cuda_local_var_42886_41_non_const_s_B[24576];

	mov.u64 	%rd13, __local_depot6;
	cvta.local.u64 	%SP, %rd13;
	ld.param.u64 	%rd3, [_Z8BWkernelPii_param_0];
	cvta.to.global.u64 	%rd1, %rd3;
	add.u64 	%rd4, %SP, 0;
	cvta.to.local.u64 	%rd2, %rd4;
	mov.u32 	%r1, %tid.x;
	mov.u32 	%r21, %ntid.x;
	shl.b32 	%r2, %r21, 2;
	mov.u32 	%r20, 0;
	mov.u32 	%r39, %r20;

BB6_1:
	.pragma "nounroll";
	mov.u32 	%r38, %r20;

BB6_2:
	.pragma "nounroll";
	mov.u32 	%r12, %r38;
	add.s32 	%r23, %r12, %r1;
	mul.wide.s32 	%rd5, %r23, 4;
	mov.u64 	%rd6, _Z8BWkernelPii$__cuda_local_var_42886_30_non_const_s_A;
	add.s64 	%rd7, %rd6, %rd5;
	mov.u64 	%rd8, _Z8BWkernelPii$__cuda_local_var_42886_41_non_const_s_B;
	add.s64 	%rd9, %rd8, %rd5;
	ld.shared.u32 	%r24, [%rd9];
	ld.shared.u32 	%r25, [%rd7];
	mad.lo.s32 	%r36, %r24, %r25, %r36;
	ld.shared.u32 	%r26, [%rd9+2048];
	ld.shared.u32 	%r27, [%rd7+2048];
	mad.lo.s32 	%r35, %r26, %r27, %r35;
	ld.shared.u32 	%r28, [%rd9+4096];
	ld.shared.u32 	%r29, [%rd7+4096];
	mad.lo.s32 	%r34, %r28, %r29, %r34;
	ld.shared.u32 	%r30, [%rd9+6144];
	ld.shared.u32 	%r31, [%rd7+6144];
	mad.lo.s32 	%r33, %r30, %r31, %r33;
	add.s32 	%r17, %r12, %r2;
	setp.lt.s32	%p1, %r17, 6144;
	mov.u32 	%r38, %r17;
	@%p1 bra 	BB6_2;

	add.s32 	%r39, %r39, 1;
	setp.lt.s32	%p2, %r39, 4000000;
	@%p2 bra 	BB6_1;

	st.local.u32 	[%rd2], %r36;
	st.local.u32 	[%rd2+4], %r35;
	st.local.u32 	[%rd2+8], %r34;
	st.local.u32 	[%rd2+12], %r33;
	setp.gt.s32	%p3, %r1, 3;
	@%p3 bra 	BB6_6;

	mul.wide.s32 	%rd10, %r1, 4;
	add.s64 	%rd11, %rd2, %rd10;
	ld.local.u32 	%r32, [%rd11];
	add.s64 	%rd12, %rd1, %rd10;
	st.global.u32 	[%rd12], %r32;

BB6_6:
	ret;
}


