b'__global__ void IntmaxaddT4(int* C, int k, int sl)\n{\n\n\n\tint i,t;\n\tint a=0,a2=0,b=2;\n\tint N=(12288* 13 )/gridDim.x;\n\tint blockStartIndex  = blockIdx.x * N;\n\tint threadStartIndex = blockStartIndex + threadIdx.x ;\n\tint threadEndIndex   = blockStartIndex + N;\n\t__shared__ int c[12288];//array count=N\n\n\n\tint count=0;\n\t#pragma unroll\n\tfor(i = threadStartIndex; i < threadEndIndex; i+=sl){\n\t\tc[threadIdx.x+count]=C[threadIdx.x+i];\n\tcount+=sl;}\n\tfor (t = 0; t < k; t++) {\n\t\ta=max(a,c[threadIdx.x]+10);\n\t\t#pragma unroll\n\t\tfor(i = threadIdx.x; i < (threadIdx.x+count); i+=sl){\n\t\ta2=c[i];c[i] = max(a,(c[i]+b));a=a2;\n\t}}\n\tcount=0;\n\n\t#pragma unroll\n\tfor(i = threadStartIndex; i < threadEndIndex; i+=sl){\n\t\tC[threadIdx.x+i]=c[threadIdx.x+count];\n\tcount++;}\n\n\n}\n'